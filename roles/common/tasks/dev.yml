---
- name: install development packages
  pacman: name={{ item }} state=latest
  with_items:
  - docker
  - docker-compose
  when: ansible_os_family == "Archlinux"

- name: install development gui packages
  pacman: name={{ item }} state=latest
  with_items:
  - meld
  when: ansible_os_family == "Archlinux" and gui == true

- name: create ~/bin
  file: path="{{ home }}/bin" state=directory
        owner={{ username }} group={{ username }}

## setup python environment

- name: clone latest pyenv from github
  git: repo={{ pyenv.repo }} dest={{ pyenv.dir }}

- name: install pyenv plugins
  git: repo={{ item.repo }} dest="{{ pyenv.dir }}/plugins/{{ item.name }}"
  with_items: "{{ pyenv.plugins }}"

- name: make sure {{ username }} owns pyenv dir
  file: path={{ pyenv.dir }} state=directory recurse=true
        owner={{ username }} group={{ username }}

- name: get list of installed pythons
  shell: ls "{{ pyenv.dir }}/versions" 2>&1 || echo ""
  register: pythons_installed

- name: install pythons
  shell: "{{ pyenv.dir }}/bin/pyenv install {{ item }}"
  become: yes
  become_user: "{{ username }}"
  with_items: "{{ pyenv.pythons }}"
  when: item not in pythons_installed.stdout_lines

- name: set first listed python as global python version
  shell: "{{ pyenv.dir }}/bin/pyenv global {{ pyenv.pythons | first }}"
  become: yes
  become_user: "{{ username }}"
